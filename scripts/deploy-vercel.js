#!/usr/bin/env node

const { execSync } = require("child_process");
const fs = require("fs");
const path = require("path");

console.log("üöÄ Deploying to Vercel...\n");

// Check if Vercel CLI is installed
try {
  execSync("vercel --version", { stdio: "pipe" });
} catch (error) {
  console.log("üì¶ Installing Vercel CLI...");
  execSync("npm install -g vercel", { stdio: "inherit" });
}

// Pre-deployment checks
console.log("üîç Running pre-deployment checks...");

try {
  // Check TypeScript
  console.log("   ‚úì Checking TypeScript...");
  execSync("npm run typecheck", { stdio: "pipe" });

  // Test build
  console.log("   ‚úì Testing build...");
  execSync("npm run build:client", { stdio: "pipe" });

  console.log("   ‚úÖ All checks passed!\n");
} catch (error) {
  console.error("‚ùå Pre-deployment checks failed:");
  console.error(error.message);
  console.log("\nüîß Please fix the issues above before deploying.");
  process.exit(1);
}

// Check for required files
const requiredFiles = [
  "vercel.json",
  "api/auth/[...route].ts",
  "api/client/[...route].ts",
  "api/doctor/[...route].ts",
  "api/admin/[...route].ts",
];

console.log("üìã Checking required Vercel files...");
for (const file of requiredFiles) {
  if (!fs.existsSync(file)) {
    console.error(`‚ùå Missing required file: ${file}`);
    process.exit(1);
  }
  console.log(`   ‚úì ${file}`);
}

// Check environment variables template
if (fs.existsSync("vercel.env.example")) {
  console.log("   ‚úì Environment variables template found");
} else {
  console.log("   ‚ö†Ô∏è  Environment variables template not found");
}

console.log("\nüåê Deploying to Vercel...");

try {
  // Deploy to Vercel
  execSync("vercel --prod", { stdio: "inherit" });

  console.log("\n‚úÖ Deployment successful!");
  console.log("\nüìã Post-deployment checklist:");
  console.log("   1. Check that your app loads correctly");
  console.log("   2. Test API endpoints");
  console.log("   3. Verify database connections");
  console.log("   4. Test user authentication");
  console.log("   5. Monitor for any errors");

  console.log("\nüîß If you encounter issues:");
  console.log("   ‚Ä¢ Check Vercel function logs: vercel logs");
  console.log("   ‚Ä¢ Verify environment variables in Vercel dashboard");
  console.log("   ‚Ä¢ Check database connection string");
  console.log("   ‚Ä¢ Review DEPLOYMENT_CHECKLIST.md");
} catch (error) {
  console.error("\n‚ùå Deployment failed:");
  console.error(error.message);
  console.log("\nüîß Troubleshooting tips:");
  console.log("   ‚Ä¢ Check your Vercel account permissions");
  console.log("   ‚Ä¢ Verify all environment variables are set");
  console.log("   ‚Ä¢ Review the build logs for errors");
  console.log("   ‚Ä¢ Consult VERCEL_DEPLOYMENT.md for detailed instructions");
  process.exit(1);
}
